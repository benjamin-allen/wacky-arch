// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProgRunner.Model;

namespace ProgRunner.Migrations
{
    [DbContext(typeof(PRContext))]
    [Migration("20211005163149_fixname")]
    partial class fixname
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProgRunner.Model.AlphaChallenge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Flag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AlphaChallenges");
                });

            modelBuilder.Entity("ProgRunner.Model.AlphaChallengeTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlphaChallengeId")
                        .HasColumnType("int");

                    b.Property<string>("BottomInput")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpectedOutput")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopInput")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlphaChallengeId");

                    b.ToTable("AlphaChallengeTests");
                });

            modelBuilder.Entity("ProgRunner.Model.RunLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChallengeId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CompletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmittedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Team")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RunLogs");
                });

            modelBuilder.Entity("ProgRunner.Model.AlphaChallengeTest", b =>
                {
                    b.HasOne("ProgRunner.Model.AlphaChallenge", "AlphaChallenge")
                        .WithMany("AlphaChallengeTests")
                        .HasForeignKey("AlphaChallengeId");

                    b.Navigation("AlphaChallenge");
                });

            modelBuilder.Entity("ProgRunner.Model.AlphaChallenge", b =>
                {
                    b.Navigation("AlphaChallengeTests");
                });
#pragma warning restore 612, 618
        }
    }
}
